model StudentSemester {
  semesterId        String
  semester          SemesterInSCE @relation(fields: [semesterId], references: [id])
  studentId         String
  student           Student  @relation(fields: [studentId], references: [id])
  @@id([semesterId, studentId])

  courses           StudentSemesterCourse[]
  
  totalHours        Int @default(12)

}

model StudentSemesterCourse {
  semesterId           String
  studentId            String
  studentSemester      StudentSemester @relation(fields: [semesterId, studentId], references: [semesterId, studentId])

  courseName           String
  courseDepartment     String
  course               AllCoursesInSCE @relation(fields: [courseName, courseDepartment], references: [courseName, courseDepartment])
  @@id([semesterId, studentId, courseName, courseDepartment])
  
  sessionRequests   StudentSessionRequest[]
}


model StudentSessionRequest {
  id                                String @id @default(cuid())
  
  studentId                         String
  semesterId                        String
  courseName                        String
  courseDepartment                  String

  studentSemesterCourse             StudentSemesterCourse @relation(fields: [semesterId, studentId, courseName, courseDepartment], references: [semesterId, studentId, courseName, courseDepartment])
  

  hours                             Int

  tutorId                           String
  tutorCourse                       TutorCourse @relation(fields: [courseName, courseDepartment, tutorId], references: [courseName, courseDepartment, tutorId])

  date                              DateTime @default(now())
  
  status                            StudentSessionRequestStatus @default(PENDING)
  completionDate                    DateTime?
}